# ============================================================
# ğŸ“˜ 15 TEMA
# ============================================================

# EX 1: PRINT È˜I STRINGURI DE BAZÄ‚
# Scrie un program care:
#  a) printeazÄƒ "Salut, Python!"
#  b) apoi printeazÄƒ pe douÄƒ linii: "Linia 1" È™i "Linia 2" folosind \n
#  c) printeazÄƒ o propoziÈ›ie formatÄƒ dintr-un text È™i o variabilÄƒ string (ex: nume).
# (FÄƒrÄƒ input Ã®n acest exerciÈ›iu.)

def ex1():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex1() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta

# EX 2: INPUT + CONVERSII TIP
# Cere utilizatorului vÃ¢rsta (input str), converteÈ™te la int È™i printeazÄƒ:
#  "La anul vei avea {varsta+1} ani."
# DacÄƒ utilizatorul introduce ceva ce nu e numÄƒr, programul poate sÄƒ dea eroare (e OK aici).
def ex2():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex2() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta



# EX 3: OPERATORI ARITMETICI
# Cere de la tastatura douÄƒ numere Ã®ntregi È™i calculeazÄƒ: suma, diferenÈ›a, produsul, Ã®mpÄƒrÈ›irea Ã®ntreagÄƒ, restul, puterea.
# AfiÈ™eazÄƒ rezultatele pe linii separate, cu etichete clare.
def ex3():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex3() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta




# EX 4: COMPARAÈšII & LOGICI
# Cere de la tastatura doua numere: a si b. AfiÈ™eazÄƒ:
#  - "Egale" - daca a si b sunt egale. "a  mai mare ca b" -
#    daca a mai mare ca b, "b mai mare ca a", daca b este mai mare ca a
#    (folosind operatorii de comparatie)
#  - "Par" sau "Impar" folosind operatorul %.
#  - "Mic È™i par" dacÄƒ x < 10 È™i e par (demonstreazÄƒ and).
def ex4():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex4() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta




# EX 5: FORMATÄ‚RI DE STRING
# Cere nume (string) È™i vÃ¢rstÄƒ (int), apoi afiÈ™eazÄƒ:
#  a) cu concatenare: "Numele meu este <nume> È™i am <vÃ¢rstÄƒ> ani."
#  b) cu format vechi: "Numele meu este %s È™i am %d ani."
def ex5():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex5() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta




# EX 6: IF-ELIF-ELSE (SISTEM DE NOTE)
# Cere un punctaj (0..100) È™i afiÈ™eazÄƒ nota:
#  A (>=90), B (>=75), C (>=60), D (>=45), E (altfel).
def ex6():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex6() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta




# EX 7: WHILE â€“ NUMÄ‚RARE È˜I SUMÄ‚
# FoloseÈ™te un while ca sÄƒ printezi primele n numere pozitive È™i sÄƒ calculezi suma lor.
# n este dat de utilizator.
def ex7():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex7() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta



# EX 8: FOR â€“ ITERAÈšIE PE È˜IR È˜I RANGE
# a) PrinteazÄƒ pe linii separate fiecare caracter din "Python este fain!"
# b) PrinteazÄƒ toate numerele pare Ã®ntre 2 È™i 20 (inclusiv) cu range.
def ex8():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex8() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta




# EX 9: LISTE â€“ BAZE
# CreeazÄƒ o listÄƒ cu cel puÈ›in 5 numere.
#  - AfiÈ™eazÄƒ primul, ultimul, È™i lungimea listei.
#  - AdaugÄƒ un numÄƒr la final, insereazÄƒ unul pe poziÈ›ia 1, È™terge un element dupÄƒ valoare.
#  - VerificÄƒ dacÄƒ un numÄƒr dat de utilizator e Ã®n listÄƒ.
def ex9():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex9() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta




# EX 10: LISTE â€“ SLICING È˜I EXTEND vs APPEND
# PorneÈ™te de la o listÄƒ de 8 numere.
#  - AfiÈ™eazÄƒ primele 3, ultimele 3, din 2 Ã®n 2.
#  - DemonstreazÄƒ diferenÈ›a Ã®ntre append È™i extend cu ["a","b"].
def ex10():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex10() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta




# EX 11: CÄ‚UTARE MAX / MIN MANUAL
# FÄƒrÄƒ sÄƒ foloseÈ™ti max/min, gÄƒseÈ™te manual cel mai mare È™i cel mai mic element dintr-o listÄƒ de numere citite de la tastaturÄƒ.
# AfiÈ™eazÄƒ È™i poziÈ›iile lor (prima apariÈ›ie).
def ex11():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex11() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta



# EX 12: NUMERE PRIME & DIVIZORI
# Cere un numÄƒr n È™i:
#  - construieÈ™te lista tuturor divizorilor lui n
#  - spune dacÄƒ n e prim (are fix 2 divizori)
def ex12():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex12() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta




# EX 13: GENERARE LISTE
# Cere un numar n si:.
#  - Genereaza 2 liste una care contine patratele numerelor pare de la 1 la n, si una care contine patratele numerelor impare de la 1 la n
def ex13():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex13() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta



# EX 14:  ELIMINÄ‚ DUPLICATE
# Cere o listÄƒ de numere (ex: "1,4,2,2,5"), transform-o Ã®n listÄƒ de int.
#  -Dupa transformare elimina creaza o noua lista in care adaugi din lista precenta doar numerele unice.
def ex13():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex13() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta



# EX 15: MINI-ANALIZÄ‚ TEXT
# DÄƒ un text (input multi-cuvÃ¢nt).
#  - numÄƒrÄƒ vocalele
#  - numÄƒrÄƒ cuvintele (numÄƒr de spaÈ›ii + 1, simplificat)
#  - Ã®nlocuieÈ™te toate apariÈ›iile lui "a" cu "e"
#  - afiÈ™eazÄƒ primele 10 caractere È™i ultimele 10 (dacÄƒ existÄƒ)
def ex13():    
    # TODO: scrie codul aici si sterge pass 
    pass
ex13() #daca nu mai vrei sa ruleze codul cand dai run sterge apelul asta
